name: Full Stack CI/CD

on:
  push:
    branches:
      - "**"  # Executa em qualquer commit
  pull_request:
    branches:
      - "**"  # Executa em qualquer Pull Request (Merge Request)
  workflow_dispatch:  # Permite execuÃ§Ã£o manual (usado no deploy para produÃ§Ã£o)

jobs:
  ### ====== FRONT-END ====== ###
  test_front:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do cÃ³digo
        uses: actions/checkout@v3

      - name: Instalar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Instalar dependÃªncias
        working-directory: front
        run: npm install

      - name: Executar testes
        working-directory: front
        run: npm test

  build_front:
    needs: test_front
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do cÃ³digo
        uses: actions/checkout@v3

      - name: Instalar dependÃªncias
        working-directory: front
        run: npm install

      - name: Construir aplicaÃ§Ã£o
        working-directory: front
        run: npm run build --prod

      - name: Salvar artefatos
        uses: actions/upload-artifact@v3
        with:
          name: front-build
          path: front/dist/

  ### ====== BACK-END ====== ###
  test_back:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do cÃ³digo
        uses: actions/checkout@v3

      - name: Instalar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Instalar dependÃªncias
        working-directory: back
        run: npm install

      - name: Executar testes
        working-directory: back
        run: npm test

  build_back:
    needs: test_back
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do cÃ³digo
        uses: actions/checkout@v3

      - name: Instalar dependÃªncias
        working-directory: back
        run: npm install

      - name: Construir aplicaÃ§Ã£o
        working-directory: back
        run: npm run build

      - name: Salvar artefatos
        uses: actions/upload-artifact@v3
        with:
          name: back-build
          path: back/build/

  ### ====== DEPLOY AMBIENTE DEV (Somente apÃ³s merge) ====== ###
  deploy_ambiente_dev:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    needs: [build_front, build_back]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do cÃ³digo
        uses: actions/checkout@v3

      - name: Baixar artefatos do front-end
        uses: actions/download-artifact@v3
        with:
          name: front-build
          path: front/dist/

      - name: Baixar artefatos do back-end
        uses: actions/download-artifact@v3
        with:
          name: back-build
          path: back/build/

      - name: Deploy para ambiente de desenvolvimento
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_DEV_IP: ${{ secrets.SERVER_DEV_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_DEV_IP << 'EOF'
            docker pull meu-projeto-front:latest
            docker pull meu-projeto-back:latest
            docker-compose up -d --force-recreate
          EOF

  ### ====== TESTES NO AMBIENTE DEV (ApÃ³s deploy) ====== ###
  test_deploy_ambiente_dev:
    needs: deploy_ambiente_dev
    runs-on: ubuntu-latest
    steps:
      - name: Testar API do Back-end
        run: |
          curl -f http://${{ secrets.SERVER_DEV_IP }}/api/health || exit 1

      - name: Testar Front-end
        run: |
          curl -f http://${{ secrets.SERVER_DEV_IP }} || exit 1

  ### ====== DEPLOY AMBIENTE PROD (Manual) ====== ###
  deploy_ambiente_prod:
    if: github.ref == 'refs/heads/main'
    needs: test_deploy_ambiente_dev
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Deploy manual para ProduÃ§Ã£o
        run: echo "ðŸš€ Pronto para Deploy! Execute manualmente no GitHub Actions."

